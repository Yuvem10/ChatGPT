<?php

namespace DoctrineProxies\__CG__\BillingFox\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class E_Invoice extends \BillingFox\Entities\E_Invoice implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'selfBalancingVAT', 'creditNote', 'netOfTax', 'paymentDate', 'situation', 'metadata', 'workflow', 'paymentMethod', 'paymentState', 'paymentComment', 'filePath', 'fiscalYear', 'quote', 'nullableProperties'];
        }

        return ['__isInitialized__', 'id', 'selfBalancingVAT', 'creditNote', 'netOfTax', 'paymentDate', 'situation', 'metadata', 'workflow', 'paymentMethod', 'paymentState', 'paymentComment', 'filePath', 'fiscalYear', 'quote', 'nullableProperties'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (E_Invoice $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function isSelfBalancingVAT(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSelfBalancingVAT', []);

        return parent::isSelfBalancingVAT();
    }

    /**
     * {@inheritDoc}
     */
    public function isCreditNote(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCreditNote', []);

        return parent::isCreditNote();
    }

    /**
     * {@inheritDoc}
     */
    public function isNetOfTax(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNetOfTax', []);

        return parent::isNetOfTax();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentDate(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentDate', []);

        return parent::getPaymentDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getSituation(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSituation', []);

        return parent::getSituation();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadata(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadata', []);

        return parent::getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkflow(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkflow', []);

        return parent::getWorkflow();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', []);

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentState(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentState', []);

        return parent::getPaymentState();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentComment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentComment', []);

        return parent::getPaymentComment();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilePath(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilePath', []);

        return parent::getFilePath();
    }

    /**
     * {@inheritDoc}
     */
    public function getFiscalYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiscalYear', []);

        return parent::getFiscalYear();
    }

    /**
     * {@inheritDoc}
     */
    public function getQuote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuote', []);

        return parent::getQuote();
    }

    /**
     * {@inheritDoc}
     */
    public function update($params)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', [$params]);

        return parent::update($params);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperties', []);

        return parent::getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function updateNullablePropertiesArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateNullablePropertiesArray', []);

        return parent::updateNullablePropertiesArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty($propName, $asArray = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperty', [$propName, $asArray]);

        return parent::getProperty($propName, $asArray);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateProperty($propName, $dateString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateProperty', [$propName, $dateString]);

        return parent::setDateProperty($propName, $dateString);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function generateTargetEntityString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateTargetEntityString', []);

        return parent::generateTargetEntityString();
    }

    /**
     * {@inheritDoc}
     */
    public function getMandatoryProperties(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMandatoryProperties', []);

        return parent::getMandatoryProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function checkForMissingFields(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkForMissingFields', []);

        return parent::checkForMissingFields();
    }

}
